plugins {
    id "com.github.node-gradle.node"
    id "idea"
}

group = "org.arhor"
version = "0.0.1-SNAPSHOT"
description = "diploma-client"

node {
    version  = "${node_version}"
    download = true
}

idea {
    module {
        excludeDirs += files("node_modules")
        excludeDirs += files("data")
        excludeDirs += files("dist")
        excludeDirs += files("dist_electron")
    }
}

dependencies {
    project(":diploma-shared")
}

def jsRootDir = "${project.projectDir}"

task injectSharedLib(type: Copy, dependsOn: ":diploma-shared:build") {
    def sharedLibSource = [project(':diploma-shared').buildDir, "compiled-js"].join(File.separator)
    def sharedLibTarget = [project(':diploma-client').projectDir, "src", "lib"].join(File.separator)

    from sharedLibSource
    into sharedLibTarget
}

task npmAuditFix (type: NpmTask, dependsOn: npmInstall) {
    description = "Verify and fix vulnerabilities in dependencies"
    workingDir = file(jsRootDir)
    args = ["audit", "fix"]
}

task clientBuild (type: NpmTask, dependsOn: [npmAuditFix, injectSharedLib]) {
    description = "Builds production version of the app client"
    workingDir = file(jsRootDir)
    args = ["run", "build"]
}

task clientStart (type: NpmTask, dependsOn: npmAuditFix) {
    description = "Starts client development server"
    workingDir = file(jsRootDir)
    args = ["run", "start"]
}

task scrap (type: NodeTask, dependsOn: npmInstall) {
    script = file('scripts/dungeon_su_scrapper.js')
}