import org.flywaydb.gradle.task.AbstractFlywayTask

plugins {
    id "org.flywaydb.flyway"
    id "org.springframework.boot"
    id "io.spring.dependency-management"
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.plugin.noarg"
    id "org.jetbrains.kotlin.plugin.allopen"
    id "org.jetbrains.kotlin.plugin.spring"
    id "org.jetbrains.kotlin.plugin.jpa"
}

group = "org.arhor"
version = "0.0.1-SNAPSHOT"
description = "diploma-server"

java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    implementation {
        exclude module: "spring-boot-starter-tomcat"
    }
    testImplementation {
        exclude module: "junit-vintage-engine"
    }
}

dependencies {
    kapt "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    kapt "org.springframework:spring-context-indexer"

    runtimeOnly "org.postgresql:postgresql"

    implementation project(":diploma-shared")

    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    implementation "io.jsonwebtoken:jjwt:${jsonwebtoken_version}"
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    implementation "org.apache.pdfbox:pdfbox:${pdfbox_version}"

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.boot:spring-boot-starter-web"

    testImplementation "org.flywaydb:flyway-core"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:postgresql:${testcontainers_version}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainers_version}"
}

tasks.withType(AbstractFlywayTask) {
    it.dependsOn processResources
}

flyway {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost:5432/diploma_db"
    user = "postgres"
    password = "password"
    locations = ["classpath:db/migration"]
    encoding = "UTF-8"
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs += [
                "-Xjsr305=strict",
                "-Xjvm-default=enable",
        ]
        jvmTarget = JavaVersion.VERSION_11
        javaParameters = true
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

springBoot {
    mainClassName = "org.arhor.diploma.DiplomaApp"
}

bootRun {
    jvmArgs += "-Dspring.profiles.active=default"
    jvmArgs += "-XX:+UseSerialGC"
    jvmArgs += "-XX:MaxRAM=100m"
    jvmArgs += "-Xss512k"
}

test {
    useJUnitPlatform()
    jvmArgs += "-Dspring.profiles.active=default"
}
