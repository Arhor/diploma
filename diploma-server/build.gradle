plugins {
    id 'org.springframework.boot'           version '2.3.0.RELEASE'
    id 'io.spring.dependency-management'    version '1.0.9.RELEASE'
    id 'io.freefair.lombok'                 version '5.0.0-rc6'
    id 'org.jetbrains.kotlin.jvm'           version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.noarg'  version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.jpa'    version '1.3.72'
    id 'java'
}

group = 'org.arhor'
version = '0.0.1-SNAPSHOT'
description = 'diploma-server'

java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    testImplementation {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencies {
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation 'com.hazelcast:hazelcast'
    implementation 'com.hazelcast:hazelcast-spring'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.postgresql:postgresql'
    implementation 'org.modelmapper:modelmapper:2.3.7'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.flywaydb:flyway-core'
    testImplementation 'org.testcontainers:postgresql:1.14.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.14.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xjvm-default=enable']
        jvmTarget = JavaVersion.VERSION_11
    }
}

bootRun {
    jvmArgs += [
            '--add-modules=java.se',
            '--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED',
            '--add-opens=java.base/java.lang=ALL-UNNAMED',
            '--add-opens=java.base/java.nio=ALL-UNNAMED',
            '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
            '--add-opens=java.management/sun.management=ALL-UNNAMED',
            '--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED'
    ]
}

test {
    useJUnitPlatform()
}

task clientCopy(type: Copy, dependsOn: ':diploma-client:clientBuild') {
    from '../diploma-client/build/'
    into 'build/resources/main/static/'
}

processResources.dependsOn(clientCopy)
